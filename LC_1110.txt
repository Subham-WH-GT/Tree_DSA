# Delete Nodes and Return Forest . . .


  TreeNode* deleteHelper(TreeNode* root,unordered_set<int>&s,vector<TreeNode*>&result){
        
        if(!root) return NULL;
        
        root->left=deleteHelper(root->left,s,result);
        root->right=deleteHelper(root->right,s,result);
        
        if(s.find(root->val)!=s.end()){
            
            if(root->left){
                result.push_back(root->left);
            }
            
            if(root->right) result.push_back(root->right);
            
            return NULL;
            
        }
        
        else{

        return root;
        }
        
    }
    
    vector<TreeNode*> delNodes(TreeNode* root, vector<int>& to_delete) {
        
        unordered_set<int>s(to_delete.begin(),to_delete.end());
        vector<TreeNode*>result;
        
        deleteHelper(root,s,result);
        
        if(s.find(root->val)==s.end()) result.push_back(root);
        
        return result;
        
    }