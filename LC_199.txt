

** Right View Of Tree **

** B F S **


    vector<int> rightSideView(TreeNode* root) {
        
        if(!root){

            return {};
        }
        
        vector<int>ans;
        
        queue<TreeNode*>q;
        q.push(root);
        
        while(!q.empty()){

        int n=q.size();
            
            TreeNode* node=NULL;
            
            while(n--){

                node=q.front();
                q.pop();
                
                if(node->left) q.push(node->left);
                
                if(node->right) q.push(node->right);
                
            }
            
            ans.push_back(node->val);
        }
        
        return ans;
        
    }



** D F S **



    
    void preOrder(TreeNode* root, int level,vector<int>&ans ){

    if(!root) return ;
        
        if(ans.size()<level){

        ans.push_back(root->val);
        
        }
        
        
        preOrder(root->right,level+1,ans);
                preOrder(root->left,level+1,ans);

        
    
    }
    
    
    vector<int> rightSideView(TreeNode* root) {

        
        vector<int>ans;
        preOrder(root,1,ans);
        
        return ans;
        
    }